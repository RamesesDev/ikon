import com.rameses.annotations.*;

class TeacherScheduleService {

	
	@PersistenceContext("main")
	def em;
	
	@Service("DateService")
	def dateSvc;
	
	@ProxyMethod
	public def getTeachers(def o) {
		def str = ( o.display_available == "1" ) ? "list-teacher-availability" : "list-all";
		return em.sqlContext.createNamedQuery("teacher_schedule:"+str).setParameters(o).resultList;
	}

	@ProxyMethod
	public def getTeacherSchedules( o ) {
		return em.sqlContext.createNamedQuery("teacher_schedule:list-teacher-schedule").setParameters(o).resultList;
	}

	@ProxyMethod
	public def getUnassignedSchedules( o ) {
		return em.sqlContext.createNamedQuery("teacher_schedule:list-available-teacher-schedules").setParameters(o).resultList;
	}
	
	@ProxyMethod
	public def assignTeacher( o ) {
		def x = em.read( "class", o );
		x.teacherid = o.teacherid;
		em.update( "class", o );
	}

	@ProxyMethod
	public def unassignTeacher( o ) {
		def x = em.read( "class", o );
		x.teacherid = null;
		em.update( "class", x );
	}
	
	@ProxyMethod
	public def getScheduleConflicts( o ) {
		def qry = em.sqlContext.createNamedQuery( "teacher_schedule:teacher-conflict-list");
		if( o.objid ) {
			qry.setVars( [filter: ''' where o.teacherid=$P{objid} '''] );				
		}
		else {
			qry.setVars( [filter: ''] );				
		}
		return qry.setParameters( o ).resultList;
	}
	
}