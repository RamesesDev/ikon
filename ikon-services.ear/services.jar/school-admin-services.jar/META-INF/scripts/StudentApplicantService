import com.rameses.annotations.*;
import java.io.*;


class StudentApplicantService {

	@PersistenceContext("main")
	def em;
	
	@Service("DateService")
	def dateSvc;

	@Service("UserAccountService")
	def userSvc;
	
	@Service( "DocnoGeneratorService" )
	def generator;
	
	@ProxyMethod
	public def submit(def o) {
		if(!o.objid) o.objid = "SAP" + new java.rmi.server.UID();
		
		def df = new java.text.SimpleDateFormat( "yyyy" );
		def pfx = "S"+df.format(new Date());
		o.appno = generator.getNextNumber([name:"student_applicant", prefix: pfx ]);
		
		return em.create( "student:applicant", o );
	}
	
	@ProxyMethod
	public def accept(def o) {
		def m = [:];
		m.putAll( o );
		m.objid = "STUD" + new java.rmi.server.UID();
		m.appid = o.objid;
		em.create( "student", m );
		em.delete( "student:applicant", o );
		
		//also create a login automatically
		def u = [:];
		u.objid = m.objid;
		u.usertype = "student";
		u.firstname = m.firstname;
		u.lastname = m.lastname;
		u.uid = m.studentno;
		u.pwd = "1234";
		u.email = m.email;
		userSvc.createLoginAccount( u );
		
		transferPhoto( m, o );
	}
	
	@ProxyMethod
	public def read(def o) {
		o = em.read( "student:applicant", o );
		if(o?.birthdate) o.birthdate = dateSvc.format( "yyyy-MM-dd", o.birthdate );
		return o;
	}
	
	@ProxyMethod
	public def getList(def params) {
		def qry = em.sqlContext.createNamedQuery( "student:list-applicants" );
		if(params) {
			if(params._start) qry.setFirstResult( params._start );
			if(params._limit) qry.setMaxResults( params._limit );
			qry.setParameters( params );
		}
		return qry.resultList;
	}
	
	
	private void transferPhoto( student, app ) {
		String temppath = System.getProperty("ikon.temp.url");
		String uploadpath = System.getProperty("ikon.uploads.url") + "/profile";
		
		File source = new File(new URL(temppath).toURI());
		source = new File(source, app.objid.hashCode()+"");
		
		File target = new File(new URL(uploadpath).toURI());		
		if( !target.exists() ) target.mkdirs();		
		target = new File(target, student.objid.hashCode()+"");
		
		if(! source.renameTo(target) ) {
			System.out.println("Failed to move the photo directory");
		}
	}

}