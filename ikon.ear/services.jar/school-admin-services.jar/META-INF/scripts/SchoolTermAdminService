import com.rameses.annotations.*;

class SchoolTermAdminService {

	@PersistenceContext("main")
	def em;
	
	@Service("DateService")
	def dateSvc;

	@ProxyMethod
	public def getList(def params) {
		def qry = em.sqlContext.createNamedQuery( "schoolterm:list" );
		if(params) {
			if(params._start) qry.setFirstResult( params._start );
			if(params._limit) qry.setMaxResults( params._limit );
			qry.setParameters( params );
		}
		def list = qry.resultList;
		list.each {
			if(it.fromdate) it.fromdate = dateSvc.format( "yyyy-MM-dd", it.fromdate );
			if(it.todate) it.todate = dateSvc.format( "yyyy-MM-dd", it.todate );
		}
		return list;
	}
	
	@ProxyMethod
	public def create(def o) {
		if(!o.objid) o.objid = "STRM" + new java.rmi.server.UID();
		return em.create( "schoolterm", o );
	}
	
	@ProxyMethod
	public def read(def o) {
		def x = em.read( "schoolterm", o );
		if(x.fromdate) x.fromdate = dateSvc.format( "yyyy-MM-dd", x.fromdate );
		if(x.todate) x.todate = dateSvc.format( "yyyy-MM-dd", x.todate );
		return x;
	}

	@ProxyMethod
	public def update(def o) {
		return em.update( "schoolterm", o );
	}
	
	@ProxyMethod
	public def remove(def o) {
		em.delete( "schoolterm", o );
	}
	
	@ProxyMethod
	public def getEntries(def o) {
		print o;
		def list = em.sqlContext.createNamedQuery("schoolterm:list-entries").setParameters( o ).resultList;
		list.each {
			if(it.fromdate) it.fromdate = dateSvc.format( "yyyy-MM-dd", it.fromdate );
			if(it.todate) it.todate = dateSvc.format( "yyyy-MM-dd", it.todate );
		}
		return list;
	}
	
	@ProxyMethod
	public def addEntry(def o) {
		print "adding entry " + o;
		try {
		o.objid = "STENT" + new java.rmi.server.UID();
		return em.create( "schoolterm:entry", o );
		}
		catch(e) {
			e.printStackTrace();
		}
	}
	
	@ProxyMethod
	public def removeEntry(def o) {
		return em.delete( "schoolterm:entry", o );
	}

	@ProxyMethod
	public def updateEntry(def o) {
		return em.update( "schoolterm:entry", o );
	}
	
	@ProxyMethod
	public def getPhaseList() {
		return em.sqlContext.createNamedQuery("schoolterm:list-phases").resultList;
	}
	

}