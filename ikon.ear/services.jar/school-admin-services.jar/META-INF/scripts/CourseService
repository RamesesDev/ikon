import com.rameses.annotations.*;

class CourseService {

	@PersistenceContext("main")
	def em;

	@ProxyMethod
	public def getList(def params) {
		def qry = em.sqlContext.createNamedQuery( "course:list" );
		if(params) {
			def buff = new StringBuffer();
			if( params.orgunitid ) {
				buff.append( ''' orgunitid=$P{orgunitid} ''' );
			}
			if( params.code ) {
				if( buff.length() > 0 ) buff.append( " and " );
				if( params.code.indexOf("%") >= 0 ) {
					buff.append( ''' code like $P{code} ''' );
				}
				else {
					buff.append( ''' code = $P{code} ''' );
				}
			}
			if( buff.length() > 0 ) { 
				qry.setVars( [condition: " where " + buff.toString() ] );
			}
			if(params._start) qry.setFirstResult( params._start );
			if(params._limit) qry.setMaxResults( params._limit );
			qry.setParameters( params );
		}
		return qry.resultList;
	}
	
	@ProxyMethod
	public def create(def o) {
		if(!o.objid) o.objid = "COU" + new java.rmi.server.UID();
		return em.create( "course", o );
	}
	
	@ProxyMethod
	public def read(def o) {
		return em.read( "course", o );
	}

	@ProxyMethod
	public def update(def o) {
		return em.update( "course", o );
	}
	
	@ProxyMethod
	public def remove(def o) {
		em.delete( "course", o );
	}
	
	
}